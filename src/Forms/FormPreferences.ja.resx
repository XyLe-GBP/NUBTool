<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="button_Cancel.Text" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="checkBox_showdirectory.Size" type="System.Drawing.Size, System.Drawing">
    <value>283, 19</value>
  </data>
  <data name="checkBox_showdirectory.Text" xml:space="preserve">
    <value>変換・処理の完了時に保存先のディレクトリを表示する</value>
  </data>
  <data name="checkBox_Updates.Size" type="System.Drawing.Size, System.Drawing">
    <value>242, 19</value>
  </data>
  <data name="checkBox_Updates.Text" xml:space="preserve">
    <value>アプリケーション起動時にアップデートを確認する</value>
  </data>
  <data name="checkBox_SmoothSamples.Size" type="System.Drawing.Size, System.Drawing">
    <value>255, 19</value>
  </data>
  <data name="checkBox_SmoothSamples.Text" xml:space="preserve">
    <value>音源の再生時、サンプル値の更新を滑らかにする</value>
  </data>
  <data name="checkBox_ATWFix.Size" type="System.Drawing.Size, System.Drawing">
    <value>404, 19</value>
  </data>
  <data name="checkBox_ATWFix.Text" xml:space="preserve">
    <value>別形式のファイルをWAVEに変換時、サンプリング周波数を常に固定して出力する</value>
  </data>
  <data name="comboBox_ATWFix.Items" xml:space="preserve">
    <value>44100 Hz (デフォルト、推奨)</value>
  </data>
  <data name="comboBox_ATWFix.Items1" xml:space="preserve">
    <value>48000 Hz (オプション)</value>
  </data>
  <data name="checkBox_ForceWaveConvertion.Size" type="System.Drawing.Size, System.Drawing">
    <value>276, 19</value>
  </data>
  <data name="checkBox_ForceWaveConvertion.Text" xml:space="preserve">
    <value>WAVEファイルのみの読み込み時でも変換を強制する</value>
  </data>
  <data name="tabPage1.Text" xml:space="preserve">
    <value>一般</value>
  </data>
  <data name="checkBox_SplashImage.Size" type="System.Drawing.Size, System.Drawing">
    <value>243, 19</value>
  </data>
  <data name="checkBox_SplashImage.Text" xml:space="preserve">
    <value>独自のスプラッシュスクリーン画像を設定する：</value>
  </data>
  <data name="checkBox_HideSplash.Size" type="System.Drawing.Size, System.Drawing">
    <value>295, 19</value>
  </data>
  <data name="checkBox_HideSplash.Text" xml:space="preserve">
    <value>アプリケーション起動時、スプラッシュスクリーンを表示しない</value>
  </data>
  <data name="tabPage2.Text" xml:space="preserve">
    <value>高度</value>
  </data>
  <data name="checkBox_LoopWarning.Size" type="System.Drawing.Size, System.Drawing">
    <value>496, 34</value>
  </data>
  <data name="checkBox_LoopWarning.Text" xml:space="preserve">
    <value>複数のファイルを読み込み中、ループ再生が有効になっているときにポイントが設定されていない場合、
曲を変更するときに警告ウィンドウを表示する</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>設定</value>
  </data>
</root>